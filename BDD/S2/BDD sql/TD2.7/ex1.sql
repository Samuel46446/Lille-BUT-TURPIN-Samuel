--Exercice 1
CREATE TABLE ETUDIANT(
    ENO INT,
    NOM VARCHAR(20) NOT NULL,
    PRENOM VARCHAR(20) NOT NULL,
    LOGIN VARCHAR(20) UNIQUE NOT NULL,
    GROUPE CHAR(1) NOT NULL,
    CONSTRAINT PK_ETUDIANT PRIMARY KEY(ENO));

CREATE TABLE CONTROLE(
    MAT VARCHAR(20),
    CNO INT,
    COEFF INT NOT NULL,
    CONSTRAINT PK_CONTROLE PRIMARY KEY(MAT, CNO),
    CONSTRAINT CK_CONTROLE_COEF CHECK(COEF > 0),
    CONSTRAINT CK_CONTROLE_CNO CHECK(CNO > 0));

CREATE TABLE NOTE(
    ENO INT,
    MAT VARCHAR(20),
    CNO INT,
    VALEUR NUMERIC(4,2) NOT NULL,
    CONSTRAINT PK_NOTE PRIMARY KEY(ENO, MAT, CNO),
    CONSTRAINT FK_NOTE_ETUDIANT FOREIGN KEY(ENO) REFERENCES ETUDIANT(ENO),
    CONSTRAINT FK_NOTE_CONTROLE FOREIGN KEY(MAT, CNO) REFERENCES CONTROLE(MAT, CNO),
    CONSTRAINT CK_VALEUR CHECK(VALEUR >= 0 AND VALEUR <= 20));

--Exercice 2
CREATE VIEW ENS_GESTION(ENO, NOM, PRENOM, GROUPE, CNO, VALEUR)
    AS SELECT ETUDIANT.ENO, NOM, PRENOM, GROUPE, CNO, VALEUR
    FROM ETUDIANT INNER JOIN NOTE ON ETUDIANT.ENO=NOTE.ENO
    WHERE MAT='gestion';
    --    MAT='algorithmique'

CREATE VIEW ENS_GESTION2(ENO, CNO, VALEUR)
    AS SELECT ENO, CNO, VALEUR
    FROM NOTE
    WHERE MAT='gestion';
    --    MAT='algo'

CREATE VIEW ETUDIANT_NOTE(MAT, CNO, VALEUR)
    AS SELECT MAT, CNO, VALEUR
    FROM ETUDIANT INNER JOIN NOTE ON ETUDIANT.CNO=NOTE.CNO
    WHERE USER=LOGIN;
    --    MAT='algo'

CREATE VIEW ETUDIANT_MAT_MOY(MAT, MOY)
    SELECT NOTE.MAT, NOTE.CNO, SUM(VALEUR*COEFF)/SUM(COEFF)
    FROM ETUDIANT INNER JOIN NOTE ON ETUDIANT.ENO=NOTE.ENO
    INNER JOIN CONTROLE ON NOTE.MAT=CONTROLE.MAT
    WHERE USER=LOGIN
    GROUP BY NOTE.MAT;

CREATE VIEW ETUDIANT_GR_MAT_CONT(GROUPE, MAT, CNO, MOY)
    AS SELECT GROUPE, MAT, CNO, AVG(VALEUR)
    FROM ETUDIANT INNER JOIN NOTE ON ETUDIANT.ENO=NOTE.ENO
    GROUP BY GROUPE, MAT, CNO;